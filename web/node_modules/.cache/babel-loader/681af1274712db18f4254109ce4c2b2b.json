{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\anton\\\\source\\\\repos\\\\Semana OmminiStack\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\anton\\\\source\\\\repos\\\\Semana OmminiStack\\\\web\\\\src\\\\App.js\";\nimport React, { useState } from 'react'; //Conceitos principais do React: Componente, estado, propriedade\n//Componente: Bloco isolado de HTML, CSS e JS, o qual não interfere no restante da aplicação\n//Propriedade: Informações que um componente PAI passa para o componente FILHO\n//Estado:\n//<> tag fragment - pode ser usada no lugar da div pra não impactar os estilos\n\nfunction App() {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        counter = _useState2[0],\n        setCounter = _useState2[1];\n\n  function incrementarContador() {\n    setCounter(counter + 1);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Contador: \", counter), React.createElement(\"button\", {\n    onClick: incrementarContador,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Incrementar\"));\n}\n\nfunction Header(props) {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.title);\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/anton/source/repos/Semana OmminiStack/web/src/App.js"],"names":["React","useState","App","counter","setCounter","incrementarContador","Header","props","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AAAA,oBAGiBD,QAAQ,CAAC,CAAD,CAHzB;AAAA;AAAA,QAGNE,OAHM;AAAA,QAGGC,UAHH;;AAIb,WAASC,mBAAT,GACA;AACED,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD;;AAGD,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeA,OAAf,CADF,EAEE;AAAQ,IAAA,OAAO,EAAEE,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF;AAMD;;AAED,SAASC,MAAT,CAAgBC,KAAhB,EACA;AAEE,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,KAAX,CADJ;AAGD;;AAED,eAAeN,GAAf","sourcesContent":["import React, {useState} from 'react';\n\n//Conceitos principais do React: Componente, estado, propriedade\n//Componente: Bloco isolado de HTML, CSS e JS, o qual não interfere no restante da aplicação\n//Propriedade: Informações que um componente PAI passa para o componente FILHO\n//Estado:\n//<> tag fragment - pode ser usada no lugar da div pra não impactar os estilos\n\nfunction App() {\n\n\n  const [counter, setCounter] = useState(0);\n  function incrementarContador()\n  {\n    setCounter(counter + 1);\n  }\n\n\n  return (\n    <>\n      <h1>Contador: {counter}</h1>\n      <button onClick={incrementarContador}>Incrementar</button>\n    </>\n  );\n}\n\nfunction Header(props)\n{\n  \n  return (\n      <h1>{props.title}</h1>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}